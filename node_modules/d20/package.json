{
  "name": "d20",
  "version": "1.4.0",
  "description": "Library for rolling dice based on dice-syntax used in RPGs.",
  "main": "d20.js",
  "bin": {
    "d20": "./bin/d20"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha -R spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/michaelenger/d20.js.git"
  },
  "keywords": [
    "dice",
    "rpg",
    "d20"
  ],
  "author": {
    "name": "Michael Enger"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/michaelenger/d20.js/issues"
  },
  "devDependencies": {
    "mocha": "^1.18.2",
    "expect": "^0.1.1"
  },
  "dependencies": {
    "commander": "^2.8.1"
  },
  "readme": "# d20.js [![Build Status](https://travis-ci.org/michaelenger/d20.js.svg?branch=master)](https://travis-ci.org/michaelenger/d20.js)\n\nJavascript library for rolling RPG dice. Supports dice notation such as \"4d6\" and \"d20+2\".\n\n## Installation\n\n### In the browser\n\nDownload the files from [GitHub](https://github.com/michaelenger/d20.js) and include the `d20.js` file somewhere in your HTML page.\n\n```html\n<script src=\"path/to/d20.js\"></script>\n```\n\n### As a Node.js module\n\nInstall via `npm`.\n\n```shell\nnpm install d20\n```\n\n`require` it in your app.\n\n```javascript\nvar d20 = require('d20');\n```\n\n### As a standalone tool\n\nInstall it globally.\n\n```shell\nnpm install -g d20\n```\n\nRun the `d20` command with any number of desired dice rolls after.\n\n```shell\nd20 4d6\nd20 d20 1d8+1 d4\n```\n\n## Usage\n\n### As a library\n\nBoth methods of using the library provides a `d20` object with the `roll()` method which is used to roll dice.\n\n```javascript\nd20.roll(20); // roll a 20-sided die\nd20.roll('4d6'); // roll four 6-sided dice\nd20.roll('2d8+1'); // roll two 8-sided dice and add 1 to the result\nd20.roll('1d8 +1 +2 -20'); // roll an 8-sided die with multiple modifiers\n```\n\nYou can get the result as an array of values rather than a single result if you use the `verboseRoll` function. Note that the results will be sorted in ascending order except for the modifiers which will be in their order of apperance.\n\n```javascript\nd20.verboseRoll(20);\nd20.verboseRoll('4d6);\nd20.verboseRoll('2d8+1');\nd20.verboseRoll('1d8 +1 +2 -20');\n```\n\nAlternatively you can just pass `true` as the second paramenter to the `roll` function.\n\n```javascript\nd20.roll(20, true);\nd20.roll('4d6', true);\nd20.roll('2d8+1', true);\nd20.roll('1d8 +1 +2 -20', true);\n```\n\n### As a standalone tool\n\nThe standalone tool takes any number of dice roll commands and will return each one separately.\n\n```shell\nd20 4d6 2d8 d10\n```\n\nIf you want more verbose output (full list of results per dice), you can use the `--verbose` option.\n\n```shell\nd20 --verbose 3d12\n```\n\nIf you add the `--total` option, it will return the sum of all the dice rolls.\n\n```shell\nd20 --total d20 1d8+1 d4\n```\n\n## Testing\n\nThe library can be tested by installing the dependencies and running `npm test`:\n\n```bash\nnpm install\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "d20@1.4.0",
  "dist": {
    "shasum": "c33731fa985e472505f62ee27eaed5192b96a215"
  },
  "_from": "d20@",
  "_resolved": "https://registry.npmjs.org/d20/-/d20-1.4.0.tgz"
}
